<script webc:type='js'>
	let allTags = $data.collections;
	const ignoreTags = ['posts', 'all'];
	let tags = Object.entries(allTags).reduce((acc, [tag, value]) => {
		if (ignoreTags.includes(tag)) return acc;
		acc[tag] = value.length;
		return acc;
	}, {});

	if (tagType === 'bookmarkTags') {
		tags = $data.bookmarks.reduce((acc, bookmark) => {
			bookmark.tags.forEach((tag) => {
				if (!acc[tag]) {
					acc[tag] = 1
				}
				else {
					acc[tag] += 1
				}
			});
			return acc;
		}, {});
	}

	const internalClass = this.class || '';

	const renderTags = (tags) => {
		if (!tags) return '';
		return `
		<p class='flex items-center flex-wrap ${internalClass}'>
				${
			Object.entries(tags).sort((a, b) => b[1] - a[1]).map(([tag, numsOfTag]) => {
				const url = tagType === 'bookmarkTags' ? `/bookmarks/tags/${tag}/` : `/tags/${tag}/`;
				return `
					<system-tag tag='${tag}' url='${url}' class='basis-5/12 md:basis-3/12' count=${numsOfTag}></system-tag>
				`;
			}).join('\n')
		}
		</p>
		`
	};

	`
	${renderTags(tags)}
	`
</script>
